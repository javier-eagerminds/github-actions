name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

env:
  CI_COMMIT_AUTHOR: Continuous Integration
  CI_COMMIT_EMAIL: continuous_integration@noreply.eagerminds.tech

jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'oracle'
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: "Prepare for release: Remove '-snapshot' from version"
        run: mvn versions:set -DremoveSnapshot -DgenerateBackupPoms=false

      - name: Tag release
        run: echo ${{ github.event.release.tag_name }}


      - name: GIT commit and push all changed files
        env:
          CI_COMMIT_MESSAGE: Prepare for release
        run: |
          git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
          git commit -a -m "${{ env.CI_COMMIT_MESSAGE }}"

      - name: Set Release version env variable
        run: |
          echo "RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Get version
        run: |
          VERSION=$( mvn help:evaluate -Dexpression=project.version -q -DforceStdout )
          echo "PROJ_VERSION=$VERSION" >> $GITHUB_OUTPUT
        id: get_version
      - name: Print version
        run: |
          echo "Version is: ${{ steps.get_version.outputs.PROJ_VERSION }}"

      - name: Dump env
        run: env | sort
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.RELEASE_VERSION }}
          release_name: Release ${{ env.RELEASE_VERSION }}
          draft: false
          prerelease: false

      - name: Generate Snapshot
        run: mvn versions:set -DnextSnapshot -DgenerateBackupPoms=false

      - name: GIT commit and push all changed files
        env:
          CI_COMMIT_MESSAGE: Generate Snapshot
        run: |
          git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
          git commit -a -m "${{ env.CI_COMMIT_MESSAGE }}"
          git push

      - name: Run a one-line script
        run: echo Hello, world!

      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
